/* @license
 * Rams <https://github.com/jacobxperez/rams/>
 * Copyright (C) 2023 Jacob Perez <jacobxperez@gmx.com>
 * Licensed under the Apache License, Version 2.0
 * http://www.apache.org/licenses/LICENSE-2.0
 */
const t=document.querySelectorAll(".slider");(()=>{for(const e of t){const t=e.querySelectorAll(".slide"),s=e.querySelectorAll("img"),a=t.length,r=[],o=e.querySelector(".slider-nav");let l,n=parseInt(e.dataset.intervalTime)||5e3,c=0;const i=()=>{const e=t[c];t[c].classList.add("slide-current"),requestAnimationFrame((()=>{for(const s of t)s!==e&&s.classList.remove("slide-current")}))},d=t=>{"next"===t?(c+=1,c>a-1&&(c=0)):"prev"===t&&(c-=1,c<0&&(c=a-1)),i()},u=t=>{clearInterval(l),l=setInterval((()=>{d("next")}),t||n)};(()=>{for(const t of s){const e=t.src,s=new Promise((t=>{const s=new Image;s.src=e,s.onload=t}));r.push(s)}return Promise.all(r)})().then((()=>{i(),u()})),o.addEventListener("click",(t=>{const e=t.target;e.classList.contains("next-slide")?(d("next"),u(8e3)):e.classList.contains("prev-slide")&&(d("prev"),u(8e3))}))}})();(0,{}.slider)(),document.addEventListener("click",(t=>{const e=t.target.closest("[data-toggle]");e?(e.hasAttribute("data-state","active")?e.removeAttribute("data-state"):e.setAttribute("data-state","active"),t.stopPropagation()):document.querySelectorAll("[data-toggle]").forEach((e=>{(t.target!==e&&e.matches('[data-toggle~="pop"]')||e.matches('[data-toggle~="tooltip"]'))&&e.removeAttribute("data-state")}))}));