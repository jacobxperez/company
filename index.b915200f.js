/* @license
 * Rams <https://github.com/jacobxperez/rams/>
 * Copyright (C) 2023 Jacob Perez <jacobxperez@gmx.com>
 * Licensed under the Apache License, Version 2.0
 * http://www.apache.org/licenses/LICENSE-2.0
 */
const t=document.querySelectorAll(".slider");(()=>{for(const e of t){const t=e.querySelectorAll(".slide"),a=t.length,s=[],r=e.querySelector(".slider-nav"),o=parseInt(e.dataset.intervalTime)||5e3;let n,c=0;const l=()=>{const e=t[c];t[c].classList.add("slide-current"),requestAnimationFrame((()=>{t.forEach((t=>{t!==e&&t.classList.remove("slide-current")}))}))},i=t=>{"next"===t?(c+=1,c>a-1&&(c=0)):"prev"===t&&(c-=1,c<0&&(c=a-1)),l()},d=t=>{clearInterval(n),n=setInterval((()=>{i("next")}),t||o)};(()=>{for(const e of t){const t=e.querySelector("img").src,a=new Promise((e=>{const a=new Image;a.src=t,a.onload=e}));s.push(a)}return Promise.all(s)})().then((()=>{l(),d()})),r.addEventListener("click",(t=>{const e=t.target;e.classList.contains("next-slide")?(i("next"),d(8e3)):e.classList.contains("prev-slide")&&(i("prev"),d(8e3))}))}})(),document.addEventListener("click",(t=>{const e=t.target.closest("[data-toggle]");e?(e.hasAttribute("data-state","active")?e.removeAttribute("data-state"):e.setAttribute("data-state","active"),t.stopPropagation()):document.querySelectorAll("[data-toggle]").forEach((e=>{(t.target!==e&&e.matches('[data-toggle~="pop"]')||e.matches('[data-toggle~="tooltip"]'))&&e.removeAttribute("data-state")}))}));