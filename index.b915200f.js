/* @license
 * Rams <https://github.com/jacobxperez/rams/>
 * Copyright (C) 2023 Jacob Perez <jacobxperez@gmx.com>
 * Licensed under the Apache License, Version 2.0
 * http://www.apache.org/licenses/LICENSE-2.0
 */
document.querySelectorAll(".slider").forEach((t=>{const e=t.querySelectorAll(".slide"),s=e.length,a=[];let l,o=0,r=5e3;const i=()=>{const t=e[o];e.forEach((t=>{t.style.visibility="hidden",t.style.zIndex=1,t.style.opacity=0})),t.style.visibility="visible",t.style.zIndex=5,t.style.opacity=1,t.style.transition="all 0.5s ease-in-out 0s"},n=t=>{"next"===t?(o+=1,o>s-1&&(o=0)):"prev"===t&&(o-=1,o<0&&(o=s-1)),i()},c=t=>{clearInterval(l),r=t||r,l=setInterval((()=>{n("next")}),r)};(()=>{for(const t of e){const e=t.querySelector("img").src,s=new Promise((t=>{const s=new Image;s.src=e,s.onload=t}));a.push(s)}return Promise.all(a)})().then((()=>{i(),c()})),t.querySelector(".slider-nav").addEventListener("click",(t=>{const e=t.target;e.classList.contains("next-slide")?(n("next"),c(8e3)):e.classList.contains("prev-slide")&&(n("prev"),c(8e3))}))})),document.addEventListener("click",(t=>{const e=t.target.closest("[data-toggle]");e?(e.hasAttribute("data-state","active")?e.removeAttribute("data-state"):e.setAttribute("data-state","active"),t.stopPropagation()):document.querySelectorAll("[data-toggle]").forEach((e=>{(t.target!==e&&e.matches('[data-toggle~="pop"]')||e.matches('[data-toggle~="tooltip"]'))&&e.removeAttribute("data-state")}))}));